// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct CitySummary {
    #[allow(missing_docs)] // documentation missing in model
    pub city_id: ::std::string::String,
    #[allow(missing_docs)] // documentation missing in model
    pub name: ::std::string::String,
}
impl CitySummary {
    #[allow(missing_docs)] // documentation missing in model
    pub fn city_id(&self) -> &str {
        use std::ops::Deref;
        self.city_id.deref()
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn name(&self) -> &str {
        use std::ops::Deref;
        self.name.deref()
    }
}
impl CitySummary {
    /// Creates a new builder-style object to manufacture [`CitySummary`](crate::types::CitySummary).
    pub fn builder() -> crate::types::builders::CitySummaryBuilder {
        crate::types::builders::CitySummaryBuilder::default()
    }
}

/// A builder for [`CitySummary`](crate::types::CitySummary).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct CitySummaryBuilder {
    pub(crate) city_id: ::std::option::Option<::std::string::String>,
    pub(crate) name: ::std::option::Option<::std::string::String>,
}
impl CitySummaryBuilder {
    #[allow(missing_docs)] // documentation missing in model
    /// This field is required.
    pub fn city_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.city_id = ::std::option::Option::Some(input.into());
        self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn set_city_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.city_id = input;
        self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn get_city_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.city_id
    }
    #[allow(missing_docs)] // documentation missing in model
    /// This field is required.
    pub fn name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.name = ::std::option::Option::Some(input.into());
        self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn set_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.name = input;
        self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn get_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.name
    }
    /// Consumes the builder and constructs a [`CitySummary`](crate::types::CitySummary).
    /// This method will fail if any of the following fields are not set:
    /// - [`city_id`](crate::types::builders::CitySummaryBuilder::city_id)
    /// - [`name`](crate::types::builders::CitySummaryBuilder::name)
    pub fn build(self) -> ::std::result::Result<crate::types::CitySummary, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::CitySummary {
            city_id: self.city_id.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "city_id",
                    "city_id was not specified but it is required when building CitySummary",
                )
            })?,
            name: self.name.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "name",
                    "name was not specified but it is required when building CitySummary",
                )
            })?,
        })
    }
}
