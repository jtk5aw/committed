// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct GetCityOutput {
    #[allow(missing_docs)] // documentation missing in model
    pub name: ::std::string::String,
    #[allow(missing_docs)] // documentation missing in model
    pub coordinates: crate::types::CityCoordinates,
}
impl GetCityOutput {
    #[allow(missing_docs)] // documentation missing in model
    pub fn name(&self) -> &str {
        use std::ops::Deref;
        self.name.deref()
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn coordinates(&self) -> &crate::types::CityCoordinates {
        &self.coordinates
    }
}
impl GetCityOutput {
    /// Creates a new builder-style object to manufacture [`GetCityOutput`](crate::operation::get_city::GetCityOutput).
    pub fn builder() -> crate::operation::get_city::builders::GetCityOutputBuilder {
        crate::operation::get_city::builders::GetCityOutputBuilder::default()
    }
}

/// A builder for [`GetCityOutput`](crate::operation::get_city::GetCityOutput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct GetCityOutputBuilder {
    pub(crate) name: ::std::option::Option<::std::string::String>,
    pub(crate) coordinates: ::std::option::Option<crate::types::CityCoordinates>,
}
impl GetCityOutputBuilder {
    #[allow(missing_docs)] // documentation missing in model
    /// This field is required.
    pub fn name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.name = ::std::option::Option::Some(input.into());
        self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn set_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.name = input;
        self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn get_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.name
    }
    #[allow(missing_docs)] // documentation missing in model
    /// This field is required.
    pub fn coordinates(mut self, input: crate::types::CityCoordinates) -> Self {
        self.coordinates = ::std::option::Option::Some(input);
        self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn set_coordinates(mut self, input: ::std::option::Option<crate::types::CityCoordinates>) -> Self {
        self.coordinates = input;
        self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn get_coordinates(&self) -> &::std::option::Option<crate::types::CityCoordinates> {
        &self.coordinates
    }
    /// Consumes the builder and constructs a [`GetCityOutput`](crate::operation::get_city::GetCityOutput).
    /// This method will fail if any of the following fields are not set:
    /// - [`name`](crate::operation::get_city::builders::GetCityOutputBuilder::name)
    /// - [`coordinates`](crate::operation::get_city::builders::GetCityOutputBuilder::coordinates)
    pub fn build(self) -> ::std::result::Result<crate::operation::get_city::GetCityOutput, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::operation::get_city::GetCityOutput {
            name: self.name.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "name",
                    "name was not specified but it is required when building GetCityOutput",
                )
            })?,
            coordinates: self.coordinates.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "coordinates",
                    "coordinates was not specified but it is required when building GetCityOutput",
                )
            })?,
        })
    }
}
