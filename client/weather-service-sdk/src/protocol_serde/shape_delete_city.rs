// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(clippy::unnecessary_wraps)]
pub fn de_delete_city_http_error(
    _response_status: u16,
    _response_headers: &::aws_smithy_runtime_api::http::Headers,
    _response_body: &[u8],
) -> std::result::Result<crate::operation::delete_city::DeleteCityOutput, crate::operation::delete_city::DeleteCityError> {
    #[allow(unused_mut)]
    let mut generic_builder = crate::protocol_serde::parse_http_error_metadata(_response_status, _response_headers, _response_body)
        .map_err(crate::operation::delete_city::DeleteCityError::unhandled)?;
    let generic = generic_builder.build();
    let error_code = match generic.code() {
        Some(code) => code,
        None => return Err(crate::operation::delete_city::DeleteCityError::unhandled(generic)),
    };

    let _error_message = generic.message().map(|msg| msg.to_owned());
    Err(match error_code {
        "NoSuchResource" => crate::operation::delete_city::DeleteCityError::NoSuchResource({
            #[allow(unused_mut)]
            let mut tmp = {
                #[allow(unused_mut)]
                let mut output = crate::types::error::builders::NoSuchResourceBuilder::default();
                output = crate::protocol_serde::shape_no_such_resource::de_no_such_resource_json_err(_response_body, output)
                    .map_err(crate::operation::delete_city::DeleteCityError::unhandled)?;
                let output = output.meta(generic);
                crate::serde_util::no_such_resource_correct_errors(output)
                    .build()
                    .map_err(crate::operation::delete_city::DeleteCityError::unhandled)?
            };
            if tmp.message.is_none() {
                tmp.message = _error_message;
            }
            tmp
        }),
        "DeletionProtection" => crate::operation::delete_city::DeleteCityError::DeletionProtection({
            #[allow(unused_mut)]
            let mut tmp = {
                #[allow(unused_mut)]
                let mut output = crate::types::error::builders::DeletionProtectionBuilder::default();
                output = crate::protocol_serde::shape_deletion_protection::de_deletion_protection_json_err(_response_body, output)
                    .map_err(crate::operation::delete_city::DeleteCityError::unhandled)?;
                let output = output.meta(generic);
                output.build()
            };
            if tmp.message.is_none() {
                tmp.message = _error_message;
            }
            tmp
        }),
        _ => crate::operation::delete_city::DeleteCityError::generic(generic),
    })
}

#[allow(clippy::unnecessary_wraps)]
pub fn de_delete_city_http_response(
    _response_status: u16,
    _response_headers: &::aws_smithy_runtime_api::http::Headers,
    _response_body: &[u8],
) -> std::result::Result<crate::operation::delete_city::DeleteCityOutput, crate::operation::delete_city::DeleteCityError> {
    Ok({
        #[allow(unused_mut)]
        let mut output = crate::operation::delete_city::builders::DeleteCityOutputBuilder::default();
        output.build()
    })
}
