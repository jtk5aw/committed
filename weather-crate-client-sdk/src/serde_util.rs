// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub(crate) fn city_already_exists_correct_errors(
    mut builder: crate::types::error::builders::CityAlreadyExistsBuilder,
) -> crate::types::error::builders::CityAlreadyExistsBuilder {
    if builder.collision_type.is_none() {
        builder.collision_type = Some(Default::default())
    }
    builder
}

pub(crate) fn create_city_output_output_correct_errors(
    mut builder: crate::operation::create_city::builders::CreateCityOutputBuilder,
) -> crate::operation::create_city::builders::CreateCityOutputBuilder {
    if builder.city_id.is_none() {
        builder.city_id = Some(Default::default())
    }
    builder
}

pub(crate) fn no_such_resource_correct_errors(
    mut builder: crate::types::error::builders::NoSuchResourceBuilder,
) -> crate::types::error::builders::NoSuchResourceBuilder {
    if builder.resource_type.is_none() {
        builder.resource_type = Some(Default::default())
    }
    builder
}

pub(crate) fn get_city_output_output_correct_errors(
    mut builder: crate::operation::get_city::builders::GetCityOutputBuilder,
) -> crate::operation::get_city::builders::GetCityOutputBuilder {
    if builder.name.is_none() {
        builder.name = Some(Default::default())
    }
    if builder.coordinates.is_none() {
        builder.coordinates = {
            let builder = crate::types::builders::CityCoordinatesBuilder::default();
            crate::serde_util::city_coordinates_correct_errors(builder).build().ok()
        }
    }
    builder
}

pub(crate) fn get_current_time_output_output_correct_errors(
    mut builder: crate::operation::get_current_time::builders::GetCurrentTimeOutputBuilder,
) -> crate::operation::get_current_time::builders::GetCurrentTimeOutputBuilder {
    if builder.time.is_none() {
        builder.time = Some(::aws_smithy_types::DateTime::from_fractional_secs(0, 0_f64))
    }
    builder
}

pub(crate) fn list_cities_output_output_correct_errors(
    mut builder: crate::operation::list_cities::builders::ListCitiesOutputBuilder,
) -> crate::operation::list_cities::builders::ListCitiesOutputBuilder {
    if builder.items.is_none() {
        builder.items = Some(Default::default())
    }
    builder
}

pub(crate) fn city_coordinates_correct_errors(
    mut builder: crate::types::builders::CityCoordinatesBuilder,
) -> crate::types::builders::CityCoordinatesBuilder {
    if builder.latitude.is_none() {
        builder.latitude = Some(Default::default())
    }
    if builder.longitude.is_none() {
        builder.longitude = Some(Default::default())
    }
    builder
}

pub(crate) fn city_summary_correct_errors(mut builder: crate::types::builders::CitySummaryBuilder) -> crate::types::builders::CitySummaryBuilder {
    if builder.city_id.is_none() {
        builder.city_id = Some(Default::default())
    }
    if builder.name.is_none() {
        builder.name = Some(Default::default())
    }
    builder
}
